name: App Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+\+[0-9]+'
      - 'pre-v[0-9]+.[0-9]+.[0-9]+\+[0-9]+'
      - "ci/test-action"

jobs:
  analyzing:
    uses: ./.github/workflows/_analyze.yml

  checking:
    uses: ./.github/workflows/_check.yml

  testing:
    uses: ./.github/workflows/_test.yml

  testing-report:
    permissions:
      contents: read
      actions: read
      checks: write
    needs:
      - testing
    uses: ./.github/workflows/_test_report.yml

  pre-build:
    name: Pre Building
    needs:
      - analyzing
      - checking
      - testing
      - testing-report
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Released - Basic
        uses: ncipollo/release-action@v1
        with:
          draft: true
          prerelease: ${{ startsWith(github.ref_name, 'pre-') }}
          bodyFile: "docs/release.md"
          artifactErrorsFailBuild: true
          token: ${{ secrets.APP_RELEASE_TOKEN }}

  build-android:
    name: Build android APK
    needs:
      - pre-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup_jdk
      - uses: ./.github/actions/setup_flutter
      - id: build
        uses: ./.github/actions/build_android
      - name: Released - Android
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          omitBodyDuringUpdate: true
          omitDraftDuringUpdate: true
          omitPrereleaseDuringUpdate: true
          artifacts: >
            ${{ steps.build.outputs.abb-path }},
            ${{ steps.build.outputs.apk-path }},
            ${{ steps.build.outputs.apk-v7a-path }},
            ${{ steps.build.outputs.apk-v8a-path }},
            ${{ steps.build.outputs.apk-x64-path }}
          token: ${{ secrets.APP_RELEASE_TOKEN }}

  build-ios:
    name: "Build Unsigned iOS IPA"
    needs:
      - pre-build
    runs-on: macos-latest
    steps:
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ^16
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup_flutter
      - id: build
        uses: ./.github/actions/build_ios_unsigned
      - name: Released - iOS
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          omitBodyDuringUpdate: true
          omitDraftDuringUpdate: true
          omitPrereleaseDuringUpdate: true
          artifacts: >
            ${{ steps.build.outputs.ipa-path }}
          token: ${{ secrets.APP_RELEASE_TOKEN }}

  build-macos-dmg:
    name: "Build macOS DMG"
    needs:
      - pre-build
    runs-on: macos-latest
    steps:
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ^16
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup_flutter
      - id: build
        uses: ./.github/actions/build_macos
      - name: Released - macOS
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          omitBodyDuringUpdate: true
          omitDraftDuringUpdate: true
          omitPrereleaseDuringUpdate: true
          artifacts: >
            ${{ steps.build.outputs.dmg-path }}
          token: ${{ secrets.APP_RELEASE_TOKEN }}

  build-windows-msix:
    name: "Build windows MSIX Installer"
    needs:
      - pre-build
    strategy:
      # symbol `g_once_init_enter_pointer`` was introduced in glib>=2.80,
      # fallback build host to ubuntu-22.04 for better compatibility.
      # refs: https://github.com/cirruslabs/docker-images-flutter/issues/337.
      matrix:
        variant:
          - arch: x64
            runner: windows-latest
          - arch: arm64
            runner: windows-11-arm
    runs-on: ${{ matrix.variant.runner }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup_flutter
      - id: build
        uses: ./.github/actions/build_windows
        with:
          arch: ${{ matrix.variant.runner }}
      - name: Released - Windows
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          omitBodyDuringUpdate: true
          omitDraftDuringUpdate: true
          omitPrereleaseDuringUpdate: true
          artifacts: >
            ${{ steps.build.outputs.msix-path }}
          token: ${{ secrets.APP_RELEASE_TOKEN }}

  build-linux-flatpak:
    name: "Build Linux Flatpak"
    needs:
      - pre-build
    strategy:
      matrix:
        variant:
          - arch: x64
            runner: ubuntu-22.04
          - arch: arm64
            runner: ubuntu-22.04-arm
    uses: ./.github/workflows/_build-linux-flatpak.yml
    with:
      arch: ${{ matrix.variant.arch }}
      retention-days: 1

  publish-linux:
    needs:
      - build-linux-flatpak
    runs-on: ubuntu-latest
    env:
      FLATPAK_BUNDLE: ${{ needs.build-linux-flatpak.outputs.flatpak-name }}
    steps:
      - id: fetch
        uses: actions/download-artifact@v4
        with:
          artifact-ids: ${{ needs.build-linux-flatpak.outputs.flatpak-artifact-id }}
          path: ${{ env.FLATPAK_BUNDLE }}
          github-token: ${{ secrets.APP_RELEASE_TOKEN }}
      - run: md5sum ${{ env.FLATPAK_BUNDLE }}
      - name: Released - Linux
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          omitBodyDuringUpdate: true
          omitDraftDuringUpdate: true
          omitPrereleaseDuringUpdate: true
          artifacts: >
            ${{ env.FLATPAK_BUNDLE }}
          token: ${{ secrets.APP_RELEASE_TOKEN }}
